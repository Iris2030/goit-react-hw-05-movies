{"version":3,"file":"static/js/855.90fa6734.chunk.js","mappings":"mOAMe,SAASA,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACIC,GAAWC,EAAAA,EAAAA,MAAXD,QAYJ,OATAE,EAAAA,EAAAA,YAAU,WAMd,OALQC,MAAM,sCAAD,OAAuCH,EAAvC,4EAAyHI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAC/IF,MAAK,SAAAN,GACFC,EAAWD,MACZS,OAAM,SAAAC,GAAK,OAAIC,MAAMD,MAEzB,kBAAMT,EAAW,OACjB,CAACC,KAGA,gCACLF,GAAWA,EAAQY,QAAQC,KAAI,SAAAC,GAC5B,OAAO,gCAAqB,wBAAKA,EAAOC,UACnC,uBAAID,EAAOE,aADCC,EAAAA,EAAAA,UAIpBjB,EAAQY,UAAY,KAAM","sources":["Components/MovieReviews/MovieReviews.js"],"sourcesContent":["import { useParams} from \"react-router-dom\"\nimport { useState, useEffect } from \"react\";\nimport nextId from \"react-id-generator\";\n// import s from './MovieReviews.module.css'\n\n\nexport default function MovieReviews(){\n    const [reviews, setReviews] = useState('')\n    let{movieId} = useParams();\n\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=c46479025b6130edc933e316d219208d&language=en-US&page=1`).then(data => data.json())\n        .then(reviews =>{\n            setReviews(reviews);\n        }).catch(error => alert(error));\n\nreturn(() => setReviews(''))\n    }, [movieId])\n\n    return( \n        <>\n  {reviews && reviews.results.map(result => {\n      return <div key={nextId()}> <h4>{result.author}</h4>\n           <p>{result.content}</p>\n           </div>\n            })}\n  {reviews.results !== [] && <p> We don't have any reviews for this movie </p> }  \n    </>\n    )\n}\n "],"names":["MovieReviews","useState","reviews","setReviews","movieId","useParams","useEffect","fetch","then","data","json","catch","error","alert","results","map","result","author","content","nextId"],"sourceRoot":""}