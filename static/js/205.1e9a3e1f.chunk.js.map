{"version":3,"file":"static/js/205.1e9a3e1f.chunk.js","mappings":"4OACA,EAAyB,iCAAzB,EAAoE,kCAApE,EAA6G,+BAA7G,EAA4J,wCAA5J,EAA4M,gCAA5M,EAA0P,sEAA1P,EAA8U,sCAA9U,EAA2X,+BAA3X,EAAma,8D,SCU7ZA,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,gCACvBC,GAAeD,EAAAA,EAAAA,OAAK,kBAAM,gCAEjB,SAASE,IACtB,IAAIC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACN,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCN,EADnC,6DAGFO,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZN,EAAaM,MACZG,OAAM,SAAAC,GAAK,OAAIC,MAAMD,QACzB,CAACd,KAGF,iCACE,oBACEgB,UAAWC,EACXC,KAAK,SACLC,QAAS,WACPrB,EAAS,MAJb,WAOE,SAAC,MAAD,IAPF,aAUCK,IACC,iCACE,iBAAKa,UAAWC,EAAhB,UACEd,EAAUiB,eAAgB,gBACxBC,IAAKlB,EAAUmB,eACfC,IAAG,0CAAqCpB,EAAUiB,kBAC/C,gBAAKG,IAAI,wCAAwCF,IAAI,iBAC1D,iBAAKL,UAAWC,EAAhB,WACE,gBAAID,UAAWC,EAAf,cAAyBd,EAAUqB,UACnC,eAAGR,UAAWC,EAAd,yBAAmCd,EAAUsB,iBAC7C,eAAIT,UAAWC,EAAf,uBACA,cAAGD,UAAWC,EAAd,SAAuBd,EAAUuB,YACjC,eAAIV,UAAWC,EAAf,qBACA,wBACGd,EAAUwB,QAAUxB,EAAUwB,OAAOC,KAAI,SAACC,GAAD,OACxC,eAAmBb,UAAWC,EAA9B,SACGY,EAAMC,OADAC,EAAAA,EAAAA,mBAQjB,iBAAKf,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,oDACA,SAAC,KAAD,CACED,UAAW,gBAAGgB,EAAH,EAAGA,SAAH,MACD,UAARA,EAAcf,EAAgBA,IAEhCgB,GAAE,OAJJ,mBAQA,SAAC,KAAD,CACEjB,UAAW,gBAAGgB,EAAH,EAAGA,SAAH,MACD,UAARA,EAAcf,EAAgBA,IAEhCgB,GAAE,UAJJ,yBASF,SAAC,EAAAC,SAAD,CAAUC,UAAU,sCAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAAC3C,EAAD,OAC5B,SAAC,KAAD,CAAO0C,KAAK,UAAUC,SAAS,SAACzC,EAAD","sources":["webpack://goit-react-hw-05-movies/./src/Components/MovieDetailsPage/MovieDetailsPage.module.css?d460","Components/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetailsPage_button__bO6mX\",\"wrapper\":\"MovieDetailsPage_wrapper__z4XEh\",\"text\":\"MovieDetailsPage_text__veq0c\",\"textContainer\":\"MovieDetailsPage_textContainer__cK2PA\",\"genre\":\"MovieDetailsPage_genre__pdjUa\",\"wrapperCast\":\"MovieDetailsPage_wrapperCast__jpdRf MovieDetailsPage_wrapper__z4XEh\",\"linkWrapper\":\"MovieDetailsPage_linkWrapper__GheJb\",\"link\":\"MovieDetailsPage_link__dSl0b\",\"active\":\"MovieDetailsPage_active__Rcv-S MovieDetailsPage_link__dSl0b\"};","import {\n  useNavigate,\n  useParams,\n  NavLink,\n  Route,\n  Routes,\n} from \"react-router-dom\";\nimport { useState, useEffect, lazy, Suspense } from \"react\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport nextId from \"react-id-generator\";\nimport s from \"./MovieDetailsPage.module.css\";\nconst MovieCast = lazy(() => import(\"../MovieCast/MovieCast\"));\nconst MovieReviews = lazy(() => import(\"../MovieReviews/MovieReviews\"));\n\nexport default function MovieDetailsPage() {\n  let navigate = useNavigate();\n  let { movieId } = useParams();\n  const [movieById, setMovieById] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=c46479025b6130edc933e316d219208d&language=en-US`\n    )\n      .then((data) => data.json())\n      .then((movie) => {\n        console.log(movie);\n        setMovieById(movie);\n      }).catch(error => alert(error));\n  }, [movieId]);\n\n  return (\n    <>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => {\n          navigate(\"/\");\n        }}\n      >\n        <AiOutlineArrowLeft />\n        Go back\n      </button>\n      {movieById && (\n        <>\n          <div className={s.wrapper}>\n           {movieById.backdrop_path ? <img\n              alt={movieById.original_title}\n              src={`https://image.tmdb.org/t/p/w300/${movieById.backdrop_path}`}\n            /> : <img src=\"https://i.ibb.co/tZsGfwJ/download.jpg\" alt=\"placeholder\"/>}\n            <div className={s.textContainer}>\n              <h2 className={s.text}> {movieById.title}</h2>\n              <p className={s.text}>user score: {movieById.vote_average}</p>\n              <h3 className={s.text}>overview</h3>\n              <p className={s.text}>{movieById.overview}</p>\n              <h3 className={s.text}>Genres</h3>\n              <ul>\n                {movieById.genres && movieById.genres.map((genre) => (\n                  <li key={nextId()} className={s.genre}>\n                    {genre.name}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          <div className={s.wrapperCast}>\n            <div className={s.linkWrapper}>\n              <h3>Additional information</h3>\n              <NavLink\n                className={({ isActive }) =>\n                  isActive ? `${s.active}` : `${s.link}`\n                }\n                to={`cast`}\n              >\n                Cast\n              </NavLink>\n              <NavLink\n                className={({ isActive }) =>\n                  isActive ? `${s.active}` : `${s.link}`\n                }\n                to={`reviews`}\n              >\n                Reviews\n              </NavLink>\n            </div>\n            <Suspense fallback={<p>Loading...</p>}>\n              <Routes>\n                <Route path=\"cast\" element={<MovieCast />} />\n                <Route path=\"reviews\" element={<MovieReviews />} />\n              </Routes>\n            </Suspense>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["MovieCast","lazy","MovieReviews","MovieDetailsPage","navigate","useNavigate","movieId","useParams","useState","movieById","setMovieById","useEffect","fetch","then","data","json","movie","console","log","catch","error","alert","className","s","type","onClick","backdrop_path","alt","original_title","src","title","vote_average","overview","genres","map","genre","name","nextId","isActive","to","Suspense","fallback","path","element"],"sourceRoot":""}