{"version":3,"file":"static/js/776.60d1dfbd.chunk.js","mappings":"wQAKe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,YAA5B,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MA4BjB,OACE,4BACE,kBAAMC,SAvBV,SAAsBC,GACpBA,EAAMC,iBACNP,EAAU,IACV,IAAMQ,EAAcX,EAAMY,OACrBD,IAKLE,EAAAA,EAAAA,IAAkBF,GACfG,MAAK,SAACZ,GACLC,EAAUD,GACNA,GAAoC,IAA1BA,EAAOa,QAAQC,QAC3BC,IAAAA,OAAAA,QAAwB,qCAG3BC,OAAM,SAACC,GAAD,OAAWC,MAAMD,MAE1Bb,GAAS,kBAAKF,GAAN,IAAgBiB,OAAO,SAAD,OAAWrB,OAbvCiB,IAAAA,OAAAA,QAAwB,oBAkBxB,WACE,kBAAOK,UAAU,IAAItB,MAAOA,EAAOuB,SA5BzC,SAAqBd,GACnBR,EAASQ,EAAMe,OAAOxB,WA4BlB,2CAEF,0BACGE,GACCA,EAAOa,QAAQU,KAAI,SAACC,GAClB,OACE,SAAC,KAAD,CAEEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CAAEC,KAAM3B,EACf4B,MAAOhC,IALX,UAMK,wBAAK0B,EAAMO,SALTP,EAAMG,OAQlBK,QAAQC,IAAI/B","sources":["Components/MoviesPage/MoviesPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Notiflix from \"notiflix\";\nimport { fetchMoviesSearch } from \"../../ApiService.js/ApiService\";\n\nexport default function MoviesPage() {\n  const [value, setValue] = useState(\"\");\n  const [movies, setMovies] = useState();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n\n  function handleInput(event) {\n    setValue(event.target.value);\n  }\n\n  function onFormSubmit(event) {\n    event.preventDefault();\n    setMovies(\"\");\n    const trimedValue = value.trim();\n    if (!trimedValue) {\n      Notiflix.Notify.failure(\"Enter something\");\n      return;\n    }\n\n    fetchMoviesSearch(trimedValue)\n      .then((movies) => {\n        setMovies(movies);\n        if (movies && movies.results.length === 0) {\n          Notiflix.Notify.failure(\"No movies matches search query\");\n        }\n      })\n      .catch((error) => alert(error));\n\n    navigate({ ...location, search: `query=${value}` });\n  }\n\n  return (\n    <div>\n      <form onSubmit={onFormSubmit}>\n        <input minLength=\"2\" value={value} onChange={handleInput} />\n        <button>Search</button>\n      </form>\n      <ul>\n        {movies &&\n          movies.results.map((movie) => {\n            return (\n              <Link\n                key={movie.id}\n                to={{\n                  pathname: `/movies/${movie.id}`,\n                  state: { from: location,\n                  query: value },\n                }}><li>{movie.title}</li></Link>\n            );\n          })}\n        {console.log(location)}\n      </ul>\n    </div>\n  );\n}\n"],"names":["MoviesPage","useState","value","setValue","movies","setMovies","location","useLocation","navigate","useNavigate","onSubmit","event","preventDefault","trimedValue","trim","fetchMoviesSearch","then","results","length","Notiflix","catch","error","alert","search","minLength","onChange","target","map","movie","to","pathname","id","state","from","query","title","console","log"],"sourceRoot":""}