{"version":3,"file":"static/js/776.2fcf6cd9.chunk.js","mappings":"wQAKe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,YAA5B,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MA2CjB,OAxCAC,EAAAA,EAAAA,YAAU,WACJJ,EAASK,SACXC,EAAAA,EAAAA,IAAkBN,EAASK,OAAOE,MAAM,KAAK,IAC1CC,MAAK,SAACV,GACLC,EAAUD,GACNA,GAAoC,IAA1BA,EAAOW,QAAQC,QAC3BC,IAAAA,OAAAA,QAAwB,qCAG3BC,OAAM,SAACC,GAAD,OAAWC,MAAMD,QAE3B,CAACb,EAASK,UA8BX,4BACE,kBAAMU,SAzBV,SAAsBC,GACpBA,EAAMC,iBACNlB,EAAU,IACV,IAAMmB,EAActB,EAAMuB,OACrBD,IAOLZ,EAAAA,EAAAA,IAAkBY,GACfV,MAAK,SAACV,GACLC,EAAUD,GACNA,GAAoC,IAA1BA,EAAOW,QAAQC,QAC3BC,IAAAA,OAAAA,QAAwB,qCAG3BC,OAAM,SAACC,GAAD,OAAWC,MAAMD,MAE1BX,GAAS,kBAAKF,GAAN,IAAgBK,OAAO,SAAD,OAAWT,OAfvCe,IAAAA,OAAAA,QAAwB,oBAoBxB,WACE,kBAAOS,UAAU,IAAIxB,MAAOA,EAAOyB,SA9BzC,SAAqBL,GACnBnB,EAASmB,EAAMM,OAAO1B,WA8BlB,2CAEF,wBACGE,GACCA,EAAOW,QAAQc,KAAI,SAACC,GAClB,OACE,SAAC,KAAD,CAEEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,KAH/B,UAIK,wBAAKH,EAAMI,SAHTJ,EAAMG","sources":["Components/MoviesPage/MoviesPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Notiflix from \"notiflix\";\nimport { fetchMoviesSearch } from \"../../ApiService.js/ApiService\";\n\nexport default function MoviesPage() {\n  const [value, setValue] = useState(\"\");\n  const [movies, setMovies] = useState();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n\n  useEffect(() => {\n    if (location.search) {\n      fetchMoviesSearch(location.search.split('=')[1])\n        .then((movies) => {\n          setMovies(movies);\n          if (movies && movies.results.length === 0) {\n            Notiflix.Notify.failure('No movies matches search query');\n          }\n        })\n        .catch((error) => alert(error));\n    }\n  }, [location.search]);\n\n  function handleInput(event) {\n    setValue(event.target.value);\n  }\n\n  function onFormSubmit(event) {\n    event.preventDefault();\n    setMovies(\"\");\n    const trimedValue = value.trim();\n    if (!trimedValue) {\n      Notiflix.Notify.failure(\"Enter something\");\n      return;\n    }\n\n    \n\n    fetchMoviesSearch(trimedValue)\n      .then((movies) => {\n        setMovies(movies);\n        if (movies && movies.results.length === 0) {\n          Notiflix.Notify.failure(\"No movies matches search query\");\n        }\n      })\n      .catch((error) => alert(error));\n\n    navigate({ ...location, search: `query=${value}` });\n  }\n\n  return (\n    <div>\n      <form onSubmit={onFormSubmit}>\n        <input minLength=\"2\" value={value} onChange={handleInput} />\n        <button>Search</button>\n      </form>\n      <ul>\n        {movies &&\n          movies.results.map((movie) => {\n            return (\n              <Link\n                key={movie.id}\n                to={{\n                  pathname: `/movies/${movie.id}`\n                }}><li>{movie.title}</li></Link>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n"],"names":["MoviesPage","useState","value","setValue","movies","setMovies","location","useLocation","navigate","useNavigate","useEffect","search","fetchMoviesSearch","split","then","results","length","Notiflix","catch","error","alert","onSubmit","event","preventDefault","trimedValue","trim","minLength","onChange","target","map","movie","to","pathname","id","title"],"sourceRoot":""}